{
  "version" : "2018-05-29",
  "operation" : "UpdateItem",
  "key": {
    "itemId" : $util.dynamodb.toDynamoDBJson($context.arguments.where.itemId)
  },
  "update" : {
    "expression" : "set #name = :name, category = :category, color = :color, diameter = :diameter, gauge = : gauge, height = :height, width = :width, upright = :upright, #type = :type, uom = :uom, length = :length, roundup = :roundup, accountingId = :accountingId, vendorId = :vendorId, preferredVendor = :preferredVendor, rail = :rail, model = :model, frame = :frame, mesh = :mesh, selvage = :selvage, stock = :stock, #location = :location, weight = :weight, cost = :cost, classType = :classType, gateType = :gateType, hardwareFunction = :hardwareFunction, func = :func, dateUpdated = :dateUpdated,",
    "expressionNames" : {
      "#name" : "name",
      "#type" : "type",
      "#location" : "location",
    },
    "expressionValues" : {
      ":category" : $util.dynamodb.toDynamoDBJson($context.arguments.data.category),
      ":name" : $util.dynamodb.toDynamoDBJson($context.arguments.data.name),
      ":color" : $util.dynamodb.toDynamoDBJson($context.arguments.data.color),
      ":diameter" : $util.dynamodb.toDynamoDBJson($context.arguments.data.diameter),
      ":gauge" : $util.dynamodb.toDynamoDBJson($context.arguments.data.gauge),
      ":height" : $util.dynamodb.toDynamoDBJson($context.arguments.data.height),
      ":width" : $util.dynamodb.toDynamoDBJson($context.arguments.data.width),
      ":upright" : $util.dynamodb.toDynamoDBJson($context.arguments.data.upright),
      ":type" : $util.dynamodb.toDynamoDBJson($context.arguments.data.type),
      ":uom" : $util.dynamodb.toDynamoDBJson($context.arguments.data.uom),
      ":length" : $util.dynamodb.toDynamoDBJson($context.arguments.data.length),
      ":roundup" : $util.dynamodb.toDynamoDBJson($context.arguments.data.roundup),
      ":accountingId" : $util.dynamodb.toDynamoDBJson($context.arguments.data.accountingId),
      ":vendorId" : $util.dynamodb.toDynamoDBJson($context.arguments.data.vendorId),
      ":preferredVendor" : $util.dynamodb.toDynamoDBJson($context.arguments.data.preferredVendor),
      ":rail" : $util.dynamodb.toDynamoDBJson($context.arguments.data.rail),
      ":model" : $util.dynamodb.toDynamoDBJson($context.arguments.data.model),
      ":frame" : $util.dynamodb.toDynamoDBJson($context.arguments.data.frame),
      ":mesh" : $util.dynamodb.toDynamoDBJson($context.arguments.data.mesh),
      ":selvage" : $util.dynamodb.toDynamoDBJson($context.arguments.data.selvage),
      ":stock" : $util.dynamodb.toDynamoDBJson($context.arguments.data.stock),
      ":location" : $util.dynamodb.toDynamoDBJson($context.arguments.data.location),
      ":weight" : $util.dynamodb.toDynamoDBJson($context.arguments.data.weight),
      ":cost" : $util.dynamodb.toDynamoDBJson($context.arguments.data.cost),
      ":classType" : $util.dynamodb.toDynamoDBJson($context.arguments.data.classType),
      ":gateType" : $util.dynamodb.toDynamoDBJson($context.arguments.data.gateType),
      ":hardwareFunction" : $util.dynamodb.toDynamoDBJson($context.arguments.data.hardwareFunction),
      ":func" : $util.dynamodb.toDynamoDBJson($context.arguments.data.func),
      ":dateUpdated" : $util.dynamodb.toDynamoDBJson($context.arguments.data.dateUpdated)
    }
  },  
}